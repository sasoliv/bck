map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
  listen 80;
  listen [::]:80;
  server_name pi;
  return 301 https://$server_name$request_uri;
}

server {

  listen 443 ssl;
  listen [::]:443 ssl;
  server_name pi;
  include snippets/pi-cert.conf;
  include snippets/pi-ssl-params.conf;

  root /usr/share/nginx/www;
  index index.html index.htm;

  location / {
    proxy_pass http://homer:8080/;
    proxy_set_header Host $http_host;
  }

  location /qbittorrent/ {
    proxy_pass http://qbittorrent:8090/;
    proxy_set_header Host $http_host;
  }

  location /jellyfin/ {
    proxy_pass http://jellyfin:8096/jellyfin/;
    proxy_pass_request_headers on;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
    proxy_buffering off;
  }

  location /filebrowser/ {
    proxy_pass http://filebrowser:80/;
    proxy_set_header Host $http_host;
  }

  location /portainer/ {
    proxy_pass http://portainer:9000/;
    proxy_set_header Host $http_host;
  }

  location /grafana/ {
    proxy_pass http://grafana:3000/;
    proxy_set_header Host $http_host;
  }

  location /pihole/admin/ {
    proxy_pass http://pihole:80/admin/;
    proxy_set_header Host $http_host;
  }

  location /grafana/api/live {
    rewrite  ^/grafana/(.*)  /$1 break;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $http_host;
    proxy_pass http://grafana:3000/;
  }
}

